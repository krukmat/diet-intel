name: AI Code Review (Codex)
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  review:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build unified diff
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          git diff --unified=0 --no-color origin/${{ github.base_ref }}...HEAD > diff.patch
          echo "Bytes in diff:" && wc -c diff.patch

      - name: Generate AI review with Codex
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Prepara el cuerpo para la Responses API con el diff
          jq -Rs '{
            model: "gpt-5-codex-medium",
            input: [
              { "role": "system", "content": "Actúa como revisor senior. Devuelve: 1) issues por severidad (Alta/Media/Baja) con file:line y motivo; 2) parches propuestos en diff unificado; 3) riesgos de regresión y tests faltantes; 4) marca ⚠️ si viola el DevSpec/scope. Sé conciso." },
              { "role": "user", "content": "Aquí está el diff unificado de la PR:\n```diff\n" + . + "\n```" }
            ],
            temperature: 0,
            max_output_tokens: 16000
          }' diff.patch > body.json

          # Llama a la Responses API de OpenAI y guarda el informe
          curl -s https://api.openai.com/v1/responses \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d @body.json \
          | jq -r '.output_text // .choices[0].message.content // .content[0].text' > review.md

      - name: Post review as PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('review.md','utf8');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
