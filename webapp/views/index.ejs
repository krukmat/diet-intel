<!-- Hero Section -->
<div class="bg-gradient-to-r from-blue-600 to-purple-700 text-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-24">
        <div class="text-center">
            <h1 class="text-4xl md:text-6xl font-bold mb-6">
                <%= t('hero.title') %>
            </h1>
            <p class="text-xl md:text-2xl mb-8 text-blue-100 max-w-3xl mx-auto">
                <%= t('hero.subtitle') %>
            </p>
            <div class="flex flex-col sm:flex-row gap-4 justify-center">
                <a href="/plans/new" class="bg-white text-blue-600 px-8 py-3 rounded-lg font-semibold hover:bg-blue-50 transition-colors">
                    <%= t('hero.generateMealPlan') %>
                </a>
                <a href="/docs" class="border-2 border-white text-white px-8 py-3 rounded-lg font-semibold hover:bg-white hover:text-blue-600 transition-colors">
                    <%= t('hero.viewApiDocs') %>
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Features Section -->
<div class="py-16 bg-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-16">
            <h2 class="text-3xl font-bold text-gray-900 mb-4"><%= t('features.title') %></h2>
            <p class="text-xl text-gray-600"><%= t('features.subtitle') %></p>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            <% features.forEach(feature => { %>
            <div class="text-center p-6 rounded-lg border border-gray-200 hover:border-blue-300 hover:shadow-lg transition-all">
                <div class="text-4xl mb-4"><%= feature.icon %></div>
                <h3 class="text-xl font-semibold text-gray-900 mb-3"><%= feature.title %></h3>
                <p class="text-gray-600"><%= feature.description %></p>
            </div>
            <% }); %>
        </div>
    </div>
</div>

<!-- Demo Section -->
<div class="py-16 bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-16">
            <h2 class="text-3xl font-bold text-gray-900 mb-4">Try It Now</h2>
            <p class="text-xl text-gray-600">Test our APIs directly from the browser</p>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- Barcode Lookup Demo -->
            <div class="bg-white rounded-lg shadow-lg p-6">
                <h3 class="text-xl font-semibold text-gray-900 mb-4">üîç Barcode Lookup</h3>
                <div class="space-y-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Enter Barcode</label>
                        <input type="text" id="barcodeInput" placeholder="e.g., 737628064502" 
                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                    </div>
                    <button onclick="lookupBarcode()" 
                            class="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors">
                        Lookup Product
                    </button>
                    <div id="barcodeResult" class="hidden mt-4 p-4 bg-green-50 border border-green-200 rounded-md">
                        <!-- Results will be populated here -->
                    </div>
                </div>
            </div>

            <!-- OCR Demo -->
            <div class="bg-white rounded-lg shadow-lg p-6">
                <h3 class="text-xl font-semibold text-gray-900 mb-4">üì∏ OCR Label Scanning</h3>
                <div class="space-y-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Upload Nutrition Label</label>
                        <input type="file" id="ocrImageInput" accept="image/*" 
                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                    </div>
                    <button onclick="scanLabel()" 
                            class="w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700 transition-colors">
                        Scan Label
                    </button>
                    <div id="ocrResult" class="hidden mt-4 p-4 bg-blue-50 border border-blue-200 rounded-md">
                        <!-- Results will be populated here -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Stats Section -->
<div class="py-16 bg-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-16">
            <h2 class="text-3xl font-bold text-gray-900 mb-4">System Performance</h2>
            <p class="text-xl text-gray-600">Real-time metrics from our API</p>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
            <div class="text-center">
                <div class="text-4xl font-bold text-blue-600 mb-2" id="cacheHitRate">-</div>
                <div class="text-gray-600">Cache Hit Rate</div>
            </div>
            <div class="text-center">
                <div class="text-4xl font-bold text-green-600 mb-2" id="avgResponseTime">-</div>
                <div class="text-gray-600">Avg Response Time</div>
            </div>
            <div class="text-center">
                <div class="text-4xl font-bold text-purple-600 mb-2" id="ocrAccuracy">-</div>
                <div class="text-gray-600">OCR Accuracy</div>
            </div>
            <div class="text-center">
                <div class="text-4xl font-bold text-orange-600 mb-2" id="plansGenerated">-</div>
                <div class="text-gray-600">Plans Generated</div>
            </div>
        </div>
    </div>
</div>

<!-- CTA Section -->
<div class="bg-gradient-to-r from-purple-600 to-blue-700 text-white py-16">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h2 class="text-3xl font-bold mb-4">Ready to Get Started?</h2>
        <p class="text-xl mb-8 text-purple-100">
            Create your first meal plan or explore our comprehensive API documentation
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
            <a href="/plans" class="bg-white text-purple-600 px-8 py-3 rounded-lg font-semibold hover:bg-purple-50 transition-colors">
                View Meal Plans
            </a>
            <a href="<%= apiUrl %>/docs" target="_blank" class="border-2 border-white text-white px-8 py-3 rounded-lg font-semibold hover:bg-white hover:text-purple-600 transition-colors">
                API Documentation
            </a>
        </div>
    </div>
</div>

<script>
// Barcode lookup demo
async function lookupBarcode() {
    const barcode = document.getElementById('barcodeInput').value.trim();
    if (!barcode) {
        alert('Please enter a barcode');
        return;
    }

    const resultDiv = document.getElementById('barcodeResult');
    resultDiv.className = 'mt-4 p-4 bg-yellow-50 border border-yellow-200 rounded-md';
    resultDiv.innerHTML = '<div class="animate-pulse">üîç Looking up product...</div>';
    resultDiv.classList.remove('hidden');

    try {
        const response = await fetch('/api/barcode', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ barcode })
        });

        const data = await response.json();
        
        if (response.ok) {
            resultDiv.className = 'mt-4 p-4 bg-green-50 border border-green-200 rounded-md';
            resultDiv.innerHTML = `
                <h4 class="font-semibold text-green-900 mb-2">‚úÖ Product Found!</h4>
                <div class="space-y-1 text-sm">
                    <div><strong>Name:</strong> ${data.name || 'N/A'}</div>
                    <div><strong>Brand:</strong> ${data.brand || 'N/A'}</div>
                    <div><strong>Calories:</strong> ${data.nutriments?.energy_kcal_per_100g || 'N/A'} kcal/100g</div>
                    <div><strong>Protein:</strong> ${data.nutriments?.protein_g_per_100g || 'N/A'}g/100g</div>
                </div>
            `;
        } else {
            throw new Error(data.message || 'Failed to lookup product');
        }
    } catch (error) {
        resultDiv.className = 'mt-4 p-4 bg-red-50 border border-red-200 rounded-md';
        resultDiv.innerHTML = `<div class="text-red-900">‚ùå Error: ${error.message}</div>`;
    }
}

// OCR demo  
async function scanLabel() {
    const fileInput = document.getElementById('ocrImageInput');
    const file = fileInput.files[0];
    
    if (!file) {
        alert('Please select an image file');
        return;
    }

    const resultDiv = document.getElementById('ocrResult');
    resultDiv.className = 'mt-4 p-4 bg-yellow-50 border border-yellow-200 rounded-md';
    resultDiv.innerHTML = '<div class="animate-pulse">üì∏ Scanning label...</div>';
    resultDiv.classList.remove('hidden');

    const formData = new FormData();
    formData.append('image', file);

    try {
        const response = await fetch('/api/scan-label', {
            method: 'POST',
            body: formData
        });

        const data = await response.json();
        
        if (response.ok && !data.low_confidence) {
            resultDiv.className = 'mt-4 p-4 bg-green-50 border border-green-200 rounded-md';
            resultDiv.innerHTML = `
                <h4 class="font-semibold text-green-900 mb-2">‚úÖ Label Scanned! (Confidence: ${Math.round(data.confidence * 100)}%)</h4>
                <div class="space-y-1 text-sm">
                    <div><strong>Calories:</strong> ${data.nutriments?.energy_kcal_per_100g || 'N/A'} kcal/100g</div>
                    <div><strong>Protein:</strong> ${data.nutriments?.protein_g_per_100g || 'N/A'}g/100g</div>
                    <div><strong>Fat:</strong> ${data.nutriments?.fat_g_per_100g || 'N/A'}g/100g</div>
                    <div><strong>Carbs:</strong> ${data.nutriments?.carbs_g_per_100g || 'N/A'}g/100g</div>
                </div>
            `;
        } else if (data.low_confidence) {
            resultDiv.className = 'mt-4 p-4 bg-yellow-50 border border-yellow-200 rounded-md';
            resultDiv.innerHTML = `
                <h4 class="font-semibold text-yellow-900 mb-2">‚ö†Ô∏è Low Confidence Scan (${Math.round(data.confidence * 100)}%)</h4>
                <div class="text-sm text-yellow-800">Consider using external OCR for better results.</div>
            `;
        } else {
            throw new Error(data.message || 'Failed to scan label');
        }
    } catch (error) {
        resultDiv.className = 'mt-4 p-4 bg-red-50 border border-red-200 rounded-md';
        resultDiv.innerHTML = `<div class="text-red-900">‚ùå Error: ${error.message}</div>`;
    }
}

// Load demo stats
async function loadStats() {
    // Mock stats for demo - in production these would come from real metrics
    document.getElementById('cacheHitRate').textContent = '87%';
    document.getElementById('avgResponseTime').textContent = '145ms';
    document.getElementById('ocrAccuracy').textContent = '92%';
    document.getElementById('plansGenerated').textContent = '1.2k+';
}

document.addEventListener('DOMContentLoaded', loadStats);
</script>